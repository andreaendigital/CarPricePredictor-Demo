[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "car-price-predictor"
version = "1.1.0"
description = "Enterprise MLOps platform for automotive price prediction and vehicle marketplace management"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Jose Rubio", email = "jose.rubio@example.com"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.9"
dependencies = [
    "requests>=2.31.0",
]

[project.optional-dependencies]
backend = [
    "Flask==2.3.3",
    "flask-restx==1.3.0",
    "flask-cors==4.0.0",
    "joblib==1.5.2",
    "numpy==2.0.2",
    "pandas==2.3.3",
    "scikit-learn==1.6.1",
    "xgboost==2.1.3",
]
frontend = [
    "Flask==2.3.3",
    "Flasgger==0.9.7.1",
]
test = [
    "pytest==7.4.3",
    "pytest-cov==4.1.0",
]
quality = [
    "black",
    "flake8",
    "pre-commit",
]
docs = [
    "mkdocs-material",
    "mkdocs-git-revision-date-localized-plugin",
    "pymdown-extensions",
    "click",
]
dev = [
    "car-price-predictor[backend,frontend,test,quality,docs]",
]

[project.urls]
Homepage = "https://github.com/joserubio/CarPricePredictor-Demo"
Documentation = "https://joserubio.github.io/CarPricePredictor-Demo/"
Repository = "https://github.com/joserubio/CarPricePredictor-Demo.git"
Issues = "https://github.com/joserubio/CarPricePredictor-Demo/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["backend*", "frontend*"]

[tool.black]
line-length = 127
target-version = ['py39', 'py310', 'py311']
include = '\\.pyi?$'
extend-exclude = '''
/(
  # directories
  \\.eggs
  | \\.git
  | \\.hg
  | \\.mypy_cache
  | \\.tox
  | \\.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests", "backend", "frontend/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov-report=term-missing",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["backend", "frontend"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 127
max-complexity = 10
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    ".eggs",
    "*.egg",
]
ignore = [
    "E203",  # whitespace before ':'
    "W503",  # line break before binary operator
]
